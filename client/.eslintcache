[{"D:\\mini-chat\\client\\src\\index.js":"1","D:\\mini-chat\\client\\src\\App.js":"2","D:\\mini-chat\\client\\src\\reportWebVitals.js":"3","D:\\mini-chat\\client\\src\\redux\\store.js":"4","D:\\mini-chat\\client\\src\\redux\\reducers\\rootReducer.js":"5","D:\\mini-chat\\client\\src\\redux\\reducers\\auth.js":"6","D:\\mini-chat\\client\\src\\redux\\types.js":"7","D:\\mini-chat\\client\\src\\routes.js":"8","D:\\mini-chat\\client\\src\\pages\\signIn.js":"9","D:\\mini-chat\\client\\src\\pages\\signUp.js":"10","D:\\mini-chat\\client\\src\\redux\\actions\\auth.js":"11","D:\\mini-chat\\client\\src\\service\\api.js":"12","D:\\mini-chat\\client\\src\\config\\config.js":"13","D:\\mini-chat\\client\\src\\pages\\chat.js":"14","D:\\mini-chat\\client\\src\\pages\\chatRoom.js":"15","D:\\mini-chat\\client\\src\\redux\\actions\\room.js":"16","D:\\mini-chat\\client\\src\\redux\\reducers\\room.js":"17","D:\\mini-chat\\client\\src\\navBar.js":"18"},{"size":500,"mtime":1611229961193,"results":"19","hashOfConfig":"20"},{"size":474,"mtime":1612351341713,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1611229961193,"results":"22","hashOfConfig":"20"},{"size":736,"mtime":1612181697463,"results":"23","hashOfConfig":"20"},{"size":213,"mtime":1612180809279,"results":"24","hashOfConfig":"20"},{"size":1639,"mtime":1612351658073,"results":"25","hashOfConfig":"20"},{"size":170,"mtime":1612173490997,"results":"26","hashOfConfig":"20"},{"size":1237,"mtime":1612354735799,"results":"27","hashOfConfig":"20"},{"size":3360,"mtime":1612127219866,"results":"28","hashOfConfig":"20"},{"size":4067,"mtime":1612124691571,"results":"29","hashOfConfig":"20"},{"size":1145,"mtime":1612180638186,"results":"30","hashOfConfig":"20"},{"size":2162,"mtime":1612180169533,"results":"31","hashOfConfig":"20"},{"size":187,"mtime":1612124860424,"results":"32","hashOfConfig":"20"},{"size":1273,"mtime":1612354876868,"results":"33","hashOfConfig":"20"},{"size":1334,"mtime":1612354747688,"results":"34","hashOfConfig":"20"},{"size":440,"mtime":1612354527566,"results":"35","hashOfConfig":"20"},{"size":498,"mtime":1612354527607,"results":"36","hashOfConfig":"20"},{"size":1777,"mtime":1612351381231,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zw8to",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\mini-chat\\client\\src\\index.js",[],["78","79"],"D:\\mini-chat\\client\\src\\App.js",[],"D:\\mini-chat\\client\\src\\reportWebVitals.js",[],"D:\\mini-chat\\client\\src\\redux\\store.js",[],"D:\\mini-chat\\client\\src\\redux\\reducers\\rootReducer.js",[],"D:\\mini-chat\\client\\src\\redux\\reducers\\auth.js",[],"D:\\mini-chat\\client\\src\\redux\\types.js",[],"D:\\mini-chat\\client\\src\\routes.js",[],"D:\\mini-chat\\client\\src\\pages\\signIn.js",[],"D:\\mini-chat\\client\\src\\pages\\signUp.js",[],"D:\\mini-chat\\client\\src\\redux\\actions\\auth.js",[],"D:\\mini-chat\\client\\src\\service\\api.js",["80"],"import axios from 'axios'\r\nimport Config from \"../config/config\";\r\nimport {store} from \"../redux/store\";\r\n\r\n\r\nconst apiClient = axios.create({\r\n    baseURL : Config.apiUrl,\r\n    headers: {\r\n        Accept : \"application/json\",\r\n        \"Content-Type\" : \"application/json\",\r\n    }\r\n})\r\n\r\napiClient.interceptors.request.use(\r\n    config => {\r\n        const authReducer = store.getState().auth;\r\n        const {token} = authReducer;\r\n        if(token) {\r\n            config.headers['Authorization'] = `Bearer ${token}`\r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        Promise.reject(error);\r\n    }\r\n)\r\n\r\napiClient.interceptors.request.use(\r\n    response => successHandler(response),\r\n    err => errorHandler(err)\r\n)\r\n\r\nexport default {\r\n    get(path,params) {\r\n        return apiClient.get(`/${path}`,params)\r\n            .then(response=>response.data);\r\n    },\r\n    getWithBody(path,body){\r\n        return apiClient.get(`/${path}`,{params : body})\r\n            .then(response=>response.data)\r\n    },\r\n    post(path,body) {\r\n        return apiClient.post(`/${path}`,body,{\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\",\r\n            }\r\n        })\r\n    },\r\n    postFormData(path,body){\r\n        return apiClient.post(`/${path}`,body,{\r\n            headers : {\r\n                'Content-Type' : 'multipart/form-data',\r\n                \"X-Requested-With\": \"XMLHttpRequest\"\r\n            }\r\n        })\r\n    },\r\n    put(path,body){\r\n        return apiClient.put(`/${path}`,body);\r\n    },\r\n    delete(path){\r\n        return apiClient.delete(`/${path}`);\r\n    },\r\n    deleteWithBody(path,body){\r\n        return apiClient.delete(`/${path}`,{\r\n            headers: {\r\n                'Content-Type' : 'multipart/form-data',\r\n                \"X-Requested-With\": \"XMLHttpRequest\"\r\n            },\r\n            data: {\r\n                productId : body\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nconst errorHandler = (err) => {\r\n    // if (err.response && err.response.status === 401) store.dispatch('authentication/logout');\r\n    return Promise.reject(err);\r\n};\r\n\r\nconst successHandler = (response) => {\r\n    return response;\r\n};\r\n","D:\\mini-chat\\client\\src\\config\\config.js",[],["81","82"],"D:\\mini-chat\\client\\src\\pages\\chat.js",["83","84"],"import React, {useState} from 'react'\r\nimport moment from \"moment\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport const Chat = ()=>{\r\n    const {data} = useSelector(state=>state.auth)\r\n    const [message, setMessage]= useState('')\r\n    const changeHandler = event => {\r\n        setMessage(event.target.name= event.target.value )\r\n    }\r\n    // const submitMessage = (e)=>{\r\n    //     let nowTime=moment()\r\n    //     dispatch(sentMessage(form.message,userId,roomId,nowTime))\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"row\">\r\n                <h3>This is chat room</h3>\r\n                <form className=\"col s12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s6\">\r\n                            <input placeholder=\"Enter Message\" type=\"text\" name=\"message\"  value={message}\r\n                            onChange={changeHandler}\r\n                            />\r\n                            <button className=\"btn-btn-small waves-effect waves-light blue\"\r\n\r\n                            >\r\n                                Sent\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","D:\\mini-chat\\client\\src\\pages\\chatRoom.js",[],"D:\\mini-chat\\client\\src\\redux\\actions\\room.js",[],"D:\\mini-chat\\client\\src\\redux\\reducers\\room.js",[],"D:\\mini-chat\\client\\src\\navBar.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":33,"column":1,"nodeType":"91","endLine":74,"endColumn":2},{"ruleId":"85","replacedBy":"92"},{"ruleId":"87","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"98","line":6,"column":12,"nodeType":"96","messageId":"97","endLine":6,"endColumn":16},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["99"],["100"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]